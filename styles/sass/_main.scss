:root{
    --gridColumns:0;
    --boxWidth:6vw;
    --boxHeight:6vw;
    --boxBorder:0.3rem;
    --containerWidth:100rem;
    --containerBorderWidth:2rem;
}
main{
    display:flex;
    flex-direction:column;
    justify-content:center;
    vertical-align: middle;
    align-items:center;
}
.home{
    display:flex;
    flex-direction:column;
    h1{
        font-size:6rem;
        text-align:center;
    }
    div{
        padding:2rem;
        background-color:lighten($backgroundColor,10);
        margin:1rem 0 1rem 0;
        font-size:4rem;
        transition:all 0.3s linear;
    }
    div:hover{
        background-color:lighten($backgroundColor,40);
        cursor: pointer;
    }
}
span.back{
    font-size:3rem;
    transition:all 0.3s linear;
}
span.back:hover{
    color:$primaryTextColor;
}
.instructions{
    display:flex;
    flex-direction:column;
    align-items:center;
    margin:2rem 10rem 2rem 10rem;
    h2{
        font-size:5rem;
    }
}
.gameInfo{
    display:flex;
    justify-content: center;
    align-items: center;
    flex-wrap:wrap;
    *{
        margin:0.5rem;
        text-align:center;
        font-size:3rem;
        transition:all 0.3s linear;
        color:$primaryTextColor;
    }
    *:hover{
        transform:scale(1.1);
    }
}
.gameBoard{
    width:90%;
    height:auto;
    margin: 0 auto;
    display:flex;
    flex-direction:column;
    justify-content: space-around;
    background-color:$gameBoardBackground;
    align-items:center;
    position:relative;
}

.boxContainer {
    margin:0.5rem 3rem 3rem 3rem ;
    max-width:var(--containerWidth);
    width: auto;
    height: auto;
    display: grid;
    grid-template-columns: repeat(var(--gridColumns), auto);
    grid-template-rows: 1fr;    
    border:var(--containerBorderWidth) solid $containerColor;
    background-color:$containerColor;
}

.boxContainer > *{
    min-width:2rem;
}
.box {
    position:relative;
    width: var(--boxWidth);
    height: var(--boxHeight);
    border:var(--boxBorder) solid transparent;
    transition:all 0.3s linear;
}
.innerContainer {
    width: 100%;
    height: 100%;
    transform-style: preserve-3d;
    transition: all 0.3s linear;
    box-shadow: 0 0 5px 2px #aaa;
}
.box.active .innerContainer {
    transform: rotateY(180deg);
}
.box:hover{
    transform:scale(1.1);
}
.boxFront,
.boxBack{
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    transition:all 0.3s linear;
    border:none;
}

.boxFront{
    background-color:$frontColor;
}
.boxBack {
    transform: rotateY(180deg);
    background-color:lighten($wrongColor,10);
}
.boxRandom {
    background-color: $randomColor;
    transition:all 1s linear;
    animation:fadeTheBox 1s linear;
}
.boxRandomBack{
    transform: rotateY(180deg);
    background-color: lighten($rightColor,10);
}
.reset{
    padding:0.5rem;
    color:$primaryTextColor;
    background:transparent;
    border:none;
    font-size:1.5rem;
    transition:all 0.3s linear;
}
.reset:hover{
    transform:rotate(360deg);
}
.overlay {
    position:absolute;
    top:0;
    left:0;
    right:0;
    bottom:0;
    background-color:rgba(0, 0, 0, 0.1);
    z-index:9999;
    color:$secondaryColor;
    text-align:center;
    display:none;
    p.txt {
        display: inline-block;
        vertical-align: middle;
        padding: 10px 15px;
        position:relative;
        font-weight:bold;
        font-size:10rem;
    }
}
.overlay:before {
    content: '';
    display: inline-block;
    height: 100%;
    vertical-align: middle;
}

@keyframes fadeTheBox {
    0%{ 
        opacity: 0.9;
        transform:scale(1);
    }
    10%{transform:scale(1.01);}
    20%{transform:scale(1.03);}
    30%{transform:scale(1.05);}
    40%{transform:scale(1.07);}
    50%{transform:scale(1.1);}
    60%{transform:scale(1.07);}
    70%{transform:scale(1.05);}
    80%{transform:scale(1.03);}
    90%{transform:scale(1.01);}
    100%{
        opacity: 1;
        transform:scale(1);
    }
}
@media(max-width:1000px){
    .box{
        width:8vw;
        height:8vw;
    }
}
@media(max-width:820px)and(orientation:portrait){
    .box{
        width:10vw;
        height:10vw;
    }
}
@media(max-width:820px)and(orientation:landscape){
    .box{
        width:6vw;
        height:6vw;
    }
}
@media(max-width:580px){
    :root{
        --containerBorderWidth:1.5rem;
    }
    .box{
        width:11vw;
        height:11vw;
    }
}
@media(max-width:400px){
    :root{
        --containerBorderWidth:1rem;
    }
}